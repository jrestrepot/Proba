# -*- coding: utf-8 -*-
"""Proyecto
Manuela Zapata Mesa
Maria Alejandra Moncada
Andrea Carvajal Maldonado
Juliana Restrepo Tobar
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score
import sklearn.metrics as metrics
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from google.colab import files

uploaded = files.upload()
data0= pd.read_csv(io.BytesIO(uploaded['data.csv']))
data0=data0.replace(to_replace="M",value=1)
data0=data0.replace(to_replace="B",value=0)


auc=[]
accuracys=[]
suma_auc=0
suma_accuracy=0
for i in range(1000):
    x_train, x_test, y_train, y_test=train_test_split(data0[['radius_mean','texture_mean','perimeter_mean','area_mean','smoothness_mean','compactness_mean','concavity_mean',"concave points_mean","symmetry_mean","fractal_dimension_mean","radius_se","texture_se","perimeter_se","area_se","smoothness_se","compactness_se","concavity_se","concave points_se","symmetry_se","fractal_dimension_se","radius_worst","texture_worst","perimeter_worst","area_worst","smoothness_worst","compactness_worst","concavity_worst","concave points_worst","symmetry_worst","fractal_dimension_worst"]],data0.diagnosis)
    classifier = DecisionTreeClassifier(max_depth=6,)
    classifier.fit(x_train, y_train)
    y_pred = classifier.predict(x_test)  
    fpr, tpr, threshold = metrics.roc_curve(y_test,y_pred)
    roc_auc = metrics.auc(fpr, tpr)
    suma_auc=suma_auc+roc_auc
    suma_accuracy=suma_accuracy+accuracy_score(y_test,y_pred)
    auc.append(roc_auc)
    accuracys.append(accuracy_score(y_test,y_pred))
print(accuracys)
print(auc)
promedio_auc=suma_auc/1000
promedio_accuracy=suma_accuracy/1000
print(promedio_auc)
print(promedio_accuracy)

x=[]
for i in range(1000):
    x.append(i)
  

plt.plot(x,accuracys)
plt.title('Puntaje de exactitud en diferentes iteraciones')
plt.xlabel('Iteraci√≥n')
plt.ylabel('Puntaje de exactitud')
